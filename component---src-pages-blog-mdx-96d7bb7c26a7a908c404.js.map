{"version":3,"file":"component---src-pages-blog-mdx-96d7bb7c26a7a908c404.js","mappings":"yOAWsBA,E,0ICiFtB,EA/EqB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACvD,EAA0DH,EAAlDI,YAAAA,OAAR,MAAsB,GAAtB,EAA0BC,EAAgCL,EAAhCK,iBAAkBC,EAAcN,EAAdM,UAE1CC,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,MACOC,EAGLL,EAHFM,MACAC,EAEEP,EAFFO,YACAC,EACER,EADFQ,SAGMC,GAAkBC,EAAAA,EAAAA,KAAlBD,cAIEE,GACNC,EAAAA,EAAAA,gBAAe,cADjBC,KAAQF,WAUJG,EAAOH,EACTb,EAASiB,SAASC,QAAQL,EAAY,IACtCb,EAASiB,SAUPE,EAPCd,EAEHW,EAAKI,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,IAC1CC,GAAAA,CAAQnB,EAAK,GAAI,CAAEoB,OAAO,IAHV,GASdjB,EAAQD,GAAoBI,EAElC,OACE,gBAACe,EAAA,EAAD,CACErB,KAAMA,EACNsB,UAAU,EACVnB,MAAOA,EACPoB,UAAWtB,EACXuB,gBAAiBpB,EACjBqB,aAAcpB,EACdN,UAAWA,GACX,gBAAC2B,EAAA,EAAD,CACEzB,MAAOL,EAAQ,gBAACA,EAAD,MAAYK,EAC3B0B,MAAM,QACN3B,KAAMA,EACNG,MAAOA,IAERH,GACC,gBAAC4B,EAAA,EAAD,CACE3B,MAAOA,EACPU,KAAMA,EACNX,KAAMA,EACNc,WAAYA,IAGhB,gBAACe,EAAA,EAAD,CAAMC,QAAM,GACTpC,EACD,gBAACqC,EAAA,EAAD,CAAUjC,iBAAkBA,KAE9B,gBAACkC,EAAA,EAAD,CACEvC,YAAaA,EACbE,SAAUA,EACVgB,KAAMA,EACNX,KAAMA,EACNc,WAAYA,IAEd,gBAACmB,EAAA,EAAD,Q,2BD9EOC,EAAe,GAOtBC,GALgB3C,EAKgB,kBALR,SAA6B4C,GAEzD,OADAC,QAAQC,KAAK,aAAe9C,EAAO,4EAC5B,cAAS4C,KAIZG,EAAc,CAClBL,aAAAA,GAEIM,EAAYC,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,QAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAO5E,QAACT,EAAD,CAAiBS,QAAQ,oBACvB,uDAEF,QAACC,EAAA,EAAD,CAAWD,QAAQ,eAKvBF,EAAWI,gBAAiB","sources":["webpack://neuro-symbolic-ai-toolkit-site/./src/pages/blog.mdx","webpack://neuro-symbolic-ai-toolkit-site/./src/layouts/noDateLayout.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM-Research-AI/neuro-symbolic-ai-toolkit-site/src/layouts/noDateLayout.js\";\nimport BlogPosts from '../components/BlogPosts.js';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    {\n      /* Page title left out so it can be generated */\n    }\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Hereâ€™s a list of all blog posts:`}</p>\n    </PageDescription>\n    <BlogPosts mdxType=\"BlogPosts\"></BlogPosts>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from 'gatsby-theme-carbon/src/components/Utils';\nimport Layout from 'gatsby-theme-carbon/src/components/Layout';\nimport PageHeader from 'gatsby-theme-carbon/src/components/PageHeader';\nimport EditLink from 'gatsby-theme-carbon/src/components/EditLink';\nimport NextPrevious from 'gatsby-theme-carbon/src/components/NextPrevious';\nimport PageTabs from 'gatsby-theme-carbon/src/components/PageTabs';\nimport Main from 'gatsby-theme-carbon/src/components/Main';\nimport useMetadata from 'gatsby-theme-carbon/src/util/hooks/useMetadata';\n\nconst NoDateLayout = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default NoDateLayout;\n"],"names":["name","pageContext","children","location","Title","frontmatter","relativePagePath","titleType","tabs","title","frontmatterTheme","theme","description","keywords","interiorTheme","useMetadata","pathPrefix","useStaticQuery","site","slug","pathname","replace","currentTab","split","filter","Boolean","slice","slugify","lower","Layout","homepage","pageTitle","pageDescription","pageKeywords","PageHeader","label","PageTabs","Main","padded","EditLink","NextPrevious","Utils","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","BlogPosts","isMDXComponent"],"sourceRoot":""}