{"version":3,"file":"component---src-pages-repos-e-pddl-mdx-088f09c7cce64d6b011a.js","mappings":"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","sources":["webpack://neuro-symbolic-ai-toolkit-site/./src/pages/repos/e-pddl.mdx","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://neuro-symbolic-ai-toolkit-site/./src/components/RepoLink.js","webpack://neuro-symbolic-ai-toolkit-site/./src/components/RepoLinkList.js","webpack://neuro-symbolic-ai-toolkit-site/./src/components/RepoHeader.js","webpack://neuro-symbolic-ai-toolkit-site/./src/components/RepoHeader.module.scss","webpack://neuro-symbolic-ai-toolkit-site/./src/layouts/repoLayout.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM-Research-AI/neuro-symbolic-ai-toolkit-site/src/layouts/repoLayout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Description`}</h2>\n    <p>{`E-PDDL: A Standardized Way of Defining Epistemic Planning Problems, ICAPS 21 paper: `}<a parentName=\"p\" {...{\n        \"href\": \"https://arxiv.org/abs/2107.08739\"\n      }}>{`https://arxiv.org/abs/2107.08739`}</a></p>\n    <h2>{`Main Contributors`}</h2>\n    <p>{`Francisco Fabiano (University of Udine)`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var text = \"last-modified-date-module--text--ogPQF\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";","import React from \"react\"\nimport {  StaticQuery, graphql, Link } from \"gatsby\"\nimport * as scss from \"./ReposByTag.module.scss\"\nimport Tags from \"../data/tags.json\"\n\nconst getTagByKey = (tagName) => {\n  return Tags.find((t) => t.key === tagName) || false\n}\n\nconst renderTagList = (tags) => {\n  const items = []\n\n  for (const t of tags) {\n    items.push(<button class=\"bx--tag bx--tag--green\"> <span class=\"bx--tag__label\" title={getTagByKey(t).name}>{t}</span> </button>)\n  }\n\n  return items\n}\n\nconst getPage = (d, url) => {\n  const slug = url.replace(\"/repos/\",\"\")\n  const pages = d.allMdx.edges\n\n  const res = pages.filter( p => p.node.slug === slug)\n\n  return res[0].node\n}\n\nconst renderFunction = (d, url) => {\n  const data = getPage(d, url)\n  const fm = data.frontmatter\n  const slug = data.slug\n  const to = `/repos/${slug}`\n\n  const item = (\n    <div>\n      <div className={scss.pb}>\n        <h4>{fm.title}</h4>\n        <p className={scss.italic}>{fm.description}</p>\n      </div>\n      <p className={scss.pt}>{renderTagList(fm.tags)}</p>\n    </div>\n  )\n\n  return <Link to={to} className={scss.tile}>{item}</Link>\n}\n\nconst RepoLink = (url) => (\n  <StaticQuery\n    query={graphql`\n    {\n      allMdx(\n        filter: {fields: {source: {eq: \"repos\"}}, frontmatter: {tags: {}}, slug: {}}\n        sort: {fields: frontmatter___weight, order: ASC}\n      ) {\n        edges {\n          node {\n            id\n            slug\n            frontmatter {\n              description\n              tags\n              url\n              title\n            }\n          }\n        }\n      }\n    }\n    `}\n    render={data => renderFunction(data, url.to)}\n  />\n)\n\n\nexport default RepoLink\n\n\n\n","import React from \"react\"\nimport * as scss from \"./ReposByTag.module.scss\"\n\n\n\nconst RepoLinkList = (li) => {\n    return <div className={scss.flex}>{li.children}</div>\n}\n\n\nexport default RepoLinkList\n\n\n\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as scss from \"./RepoHeader.module.scss\"\nimport Tags from \"../data/tags.json\"\n\nconst getTagByKey = (tagName) => {\n  return Tags.find((t) => t.key === tagName) || false\n}\n\nconst RepoHeader = (frontmatter) => {\n  const { url, tags } = frontmatter.frontmatter\n  const items = []\n\n  for (const [index, value] of tags.entries()) {\n    items.push(<Link to={`/repos#${value}`} key={index}><button class=\"bx--tag bx--tag--green\"> <span class=\"bx--tag__label\" title={getTagByKey(value).name}>{value}</span> </button></Link>)\n  }\n\n  return (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-1\">Repository: </div>\n        <div className=\"bx--col-lg-4\"><a href={url} target=\"_blank\" rel=\"noreferrer\">{url}</a></div>\n      </div>\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-1 category-header\">Categories:</div>\n        <div className=\"bx--col-lg-4\"><div className={scss.flex_sm}>{items}</div></div>\n      </div>\n    </div>\n  )\n}\n\nexport default RepoHeader\n\n\n\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"RepoHeader-module--bx--text-truncate--end--09Tfn\";\nexport var bxTextTruncateFront = \"RepoHeader-module--bx--text-truncate--front--PdfYt\";\nexport var flex = \"RepoHeader-module--flex--anwdv\";\nexport var flex_sm = \"RepoHeader-module--flex_sm--FX8Eh\";\nexport var header = \"RepoHeader-module--header--IXiwg\";\nexport var categoryHeader = \"RepoHeader-module--category-header--bjosG\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { MDXProvider } from \"@mdx-js/react\"\n\nimport Utils from 'gatsby-theme-carbon/src/components/Utils';\nimport Layout from 'gatsby-theme-carbon/src/components/Layout';\nimport PageHeader from 'gatsby-theme-carbon/src/components/PageHeader';\nimport EditLink from 'gatsby-theme-carbon/src/components/EditLink';\nimport NextPrevious from 'gatsby-theme-carbon/src/components/NextPrevious';\nimport PageTabs from 'gatsby-theme-carbon/src/components/PageTabs';\nimport Main from 'gatsby-theme-carbon/src/components/Main';\nimport useMetadata from 'gatsby-theme-carbon/src/util/hooks/useMetadata';\nimport LastModifiedDate from 'gatsby-theme-carbon/src/components/LastModifiedDate';\n\nimport RepoHeader from \"../components/RepoHeader\"\nimport RepoLink from \"../components/RepoLink\";\nimport RepoLinkList from \"../components/RepoLinkList\";\n\nconst RepoLayout = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n  const shortcodes = { RepoLink, RepoLinkList, Link }\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        <RepoHeader frontmatter={frontmatter}></RepoHeader>\n        <MDXProvider components={shortcodes}>{children}</MDXProvider>\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default RepoLayout;\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","date","lastModified","Date","className","toLocaleDateString","day","year","month","getTagByKey","tagName","Tags","t","key","renderFunction","d","url","data","slug","replace","allMdx","edges","filter","p","node","getPage","fm","frontmatter","to","item","scss","title","description","tags","items","push","class","name","renderTagList","Link","StaticQuery","query","render","li","children","entries","index","value","href","target","rel","pageContext","location","Title","relativePagePath","titleType","tabs","frontmatterTheme","theme","keywords","interiorTheme","useMetadata","shortcodes","RepoLink","RepoLinkList","pathPrefix","useStaticQuery","site","pathname","currentTab","split","Boolean","slice","slugify","lower","Layout","homepage","pageTitle","pageDescription","pageKeywords","PageHeader","label","PageTabs","Main","padded","EditLink","LastModifiedDate","NextPrevious","Utils"],"sourceRoot":""}