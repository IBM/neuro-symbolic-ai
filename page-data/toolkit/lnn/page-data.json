{
    "componentChunkName": "component---src-pages-toolkit-lnn-mdx",
    "path": "/toolkit/lnn/",
    "result": {"pageContext":{"frontmatter":{"title":"FOL-LNN","description":"First-order logic LNN","url":"https://github.com/IBM/LNN","tag":"LNN","tags":["LNN"],"weight":1},"relativePagePath":"/toolkit/lnn.mdx","titleType":"prepend","MdxNode":{"id":"3dfe545d-055c-5adf-afbe-9dd456adf73b","children":[],"parent":"610acb18-11c7-5116-88c3-90ed96e5febd","internal":{"content":"---\ntitle: FOL-LNN\ndescription: First-order logic LNN\nurl: https://github.com/IBM/LNN\ntag: \"LNN\"\ntags: [\"LNN\"]\nweight: 1\n---\n\n# Logical Neural Networks\nLNNs are a novel `Neuro = Symbolic` framework designed to seamlessly provide key\nproperties of both neural nets (learning) and symbolic logic (knowledge and reasoning).\n\n- Every neuron has a meaning as a component of a formula in a weighted real-valued logic, yielding a highly interpretable disentangled representation. \n- Inference is omnidirectional, which corresponds to logical reasoning and includes classical first-order logic (FOL) theorem proving with quantifiers.\n- Intermediate neurons are inspectable and may individually specify targets and error signals, rather than focussing on predefined target variables at the last layer of the network.\n- The model is end-to-end differentiable, and learning minimizes a novel loss function capturing logical contradiction, yielding resilience to inconsistent knowledge. \n- Bounds on truths (as ranges) enable the open-world assumption, which can have probabilistic semantics and offer resilience to incomplete knowledge.\n\n<figure>\n   <p align=\"center\">\n        <img src=\"../../images/lnn_structure.png\" height=\"250\" align=\"middle\" alt=\"Example of Logical Neural Network\"/>\n        <figcaption>LNN - An Interpretable Neural Reasoner</figcaption>\n   </p>\n</figure>\n\n\n## Quickstart\n\nTo install the LNN:\n1. Install [GraphViz](https://www.graphviz.org/download/)\n2. Run: \n   ```\n   pip install git+https://github.com/IBM/LNN.git\n   ```\n\n## Documentation\n\n| [Read the Docs][Docs] | [Academic Papers][Papers]\t| [Educational Resources][Education] | [Neuro-Symbolic AI][Neuro-Symbolic AI] | [API Overview][API] | [Python Module][Module] |\n|:-----------------------:|:---------------------------:|:-----------------:|:----------:|:-------:|:-------:|\n| [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/doc.png\" alt=\"Docs\" width=\"60\"/>][Docs] | [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/academic.png\" alt=\"Academic Papers\" width=\"60\"/>][Papers] |  [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/help.png\" alt=\"Getting Started\" width=\"60\"/>][Education] | [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/nsai.png\" alt=\"Neuro-Symbolic AI\" width=\"60\"/>][Neuro-Symbolic AI] | [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/api.png\" alt=\"API\" width=\"60\"/>][API] | [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/python.png\" alt=\"Python Module\" width=\"60\"/>][Module] |\n\n\n## Citation\nIf you use Logical Neural Networks for research, please consider citing the\nreference paper:\n```raw\n@article{riegel2020logical,\n  title={Logical neural networks},\n  author={Riegel, Ryan and Gray, Alexander and Luus, Francois and Khan, Naweed and Makondo, Ndivhuwo and Akhalwaya, Ismail Yunus and Qian, Haifeng and Fagin, Ronald and Barahona, Francisco and Sharma, Udit and others},\n  journal={arXiv preprint arXiv:2006.13155},\n  year={2020}\n}\n```\n\n\n## Main Contributors\n\n[Naweed Khan](https://github.com/NaweedAghmad), [Ndivhuwo Makondo](https://github.com/nDiv), [Francois Luus](https://github.com/francoisluus), Dheeraj Sreedhar, Ismail Akhalwaya, [Richard Young](https://github.com/richardyoung00), [Toby Kurien](https://github.com/tobykurien)\n\n\n[Docs]: https://ibm.github.io/LNN/\n[Papers]: https://ibm.github.io/LNN/papers.html\n[Education]: https://ibm.github.io/LNN/education/education.html\n[API]: https://ibm.github.io/LNN/usage.html\n[Module]: https://ibm.github.io/LNN/lnn/LNN.html\n[Neuro-Symbolic AI]: https://research.ibm.com/teams/neuro-symbolic-ai\n","type":"Mdx","contentDigest":"b8aef3f1cf55f24d70040e168159510e","owner":"gatsby-plugin-mdx","counter":130,"fieldOwners":{"source":"gatsby-plugin-mdx-source-name"}},"frontmatter":{"title":"FOL-LNN","description":"First-order logic LNN","url":"https://github.com/IBM/LNN","tag":"LNN","tags":["LNN"],"weight":1},"exports":{},"rawBody":"---\ntitle: FOL-LNN\ndescription: First-order logic LNN\nurl: https://github.com/IBM/LNN\ntag: \"LNN\"\ntags: [\"LNN\"]\nweight: 1\n---\n\n# Logical Neural Networks\nLNNs are a novel `Neuro = Symbolic` framework designed to seamlessly provide key\nproperties of both neural nets (learning) and symbolic logic (knowledge and reasoning).\n\n- Every neuron has a meaning as a component of a formula in a weighted real-valued logic, yielding a highly interpretable disentangled representation. \n- Inference is omnidirectional, which corresponds to logical reasoning and includes classical first-order logic (FOL) theorem proving with quantifiers.\n- Intermediate neurons are inspectable and may individually specify targets and error signals, rather than focussing on predefined target variables at the last layer of the network.\n- The model is end-to-end differentiable, and learning minimizes a novel loss function capturing logical contradiction, yielding resilience to inconsistent knowledge. \n- Bounds on truths (as ranges) enable the open-world assumption, which can have probabilistic semantics and offer resilience to incomplete knowledge.\n\n<figure>\n   <p align=\"center\">\n        <img src=\"../../images/lnn_structure.png\" height=\"250\" align=\"middle\" alt=\"Example of Logical Neural Network\"/>\n        <figcaption>LNN - An Interpretable Neural Reasoner</figcaption>\n   </p>\n</figure>\n\n\n## Quickstart\n\nTo install the LNN:\n1. Install [GraphViz](https://www.graphviz.org/download/)\n2. Run: \n   ```\n   pip install git+https://github.com/IBM/LNN.git\n   ```\n\n## Documentation\n\n| [Read the Docs][Docs] | [Academic Papers][Papers]\t| [Educational Resources][Education] | [Neuro-Symbolic AI][Neuro-Symbolic AI] | [API Overview][API] | [Python Module][Module] |\n|:-----------------------:|:---------------------------:|:-----------------:|:----------:|:-------:|:-------:|\n| [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/doc.png\" alt=\"Docs\" width=\"60\"/>][Docs] | [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/academic.png\" alt=\"Academic Papers\" width=\"60\"/>][Papers] |  [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/help.png\" alt=\"Getting Started\" width=\"60\"/>][Education] | [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/nsai.png\" alt=\"Neuro-Symbolic AI\" width=\"60\"/>][Neuro-Symbolic AI] | [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/api.png\" alt=\"API\" width=\"60\"/>][API] | [<img src=\"https://raw.githubusercontent.com/IBM/LNN/master/docsrc/images/icons/python.png\" alt=\"Python Module\" width=\"60\"/>][Module] |\n\n\n## Citation\nIf you use Logical Neural Networks for research, please consider citing the\nreference paper:\n```raw\n@article{riegel2020logical,\n  title={Logical neural networks},\n  author={Riegel, Ryan and Gray, Alexander and Luus, Francois and Khan, Naweed and Makondo, Ndivhuwo and Akhalwaya, Ismail Yunus and Qian, Haifeng and Fagin, Ronald and Barahona, Francisco and Sharma, Udit and others},\n  journal={arXiv preprint arXiv:2006.13155},\n  year={2020}\n}\n```\n\n\n## Main Contributors\n\n[Naweed Khan](https://github.com/NaweedAghmad), [Ndivhuwo Makondo](https://github.com/nDiv), [Francois Luus](https://github.com/francoisluus), Dheeraj Sreedhar, Ismail Akhalwaya, [Richard Young](https://github.com/richardyoung00), [Toby Kurien](https://github.com/tobykurien)\n\n\n[Docs]: https://ibm.github.io/LNN/\n[Papers]: https://ibm.github.io/LNN/papers.html\n[Education]: https://ibm.github.io/LNN/education/education.html\n[API]: https://ibm.github.io/LNN/usage.html\n[Module]: https://ibm.github.io/LNN/lnn/LNN.html\n[Neuro-Symbolic AI]: https://research.ibm.com/teams/neuro-symbolic-ai\n","fileAbsolutePath":"/home/travis/build/IBM-Research-AI/neuro-symbolic-ai-toolkit-site/src/pages/toolkit/lnn.mdx","fields":{"source":"toolkit"},"__gatsby_resolved":{"fields":{"source":"toolkit"},"frontmatter":{"weight":1,"tags":["LNN"]},"slug":"lnn"}}}},
    "staticQueryHashes": ["1008643715","1364590287","137577622","1404468418","151170173","1794870524","2102389209","2746626797","3018647132","3037994772","3151510810","768070550"]}