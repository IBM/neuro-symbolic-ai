{"version":3,"file":"component---src-pages-repos-ethical-ai-1-mdx-6299e9763c7a4ee48472.js","mappings":"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","sources":["webpack://neuro-symbolic-ai-toolkit-site/./src/pages/repos/ethical_ai-1.mdx","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://neuro-symbolic-ai-toolkit-site/./src/components/RepoHeader.js","webpack://neuro-symbolic-ai-toolkit-site/./src/components/RepoHeader.module.scss","webpack://neuro-symbolic-ai-toolkit-site/./src/components/RepoLink.js","webpack://neuro-symbolic-ai-toolkit-site/./src/components/RepoLinkList.js","webpack://neuro-symbolic-ai-toolkit-site/./src/layouts/repoLayout.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM-Research-AI/neuro-symbolic-ai-toolkit-site/src/layouts/repoLayout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Description`}</h2>\n    <p>{`Website (WIP) for gathering and aggregating ethical preference data. Website only accessible from RPI VPN currently at - `}<a parentName=\"p\" {...{\n        \"href\": \"https://ethicalai.cs.rpi.edu/\"\n      }}>{`https://ethicalai.cs.rpi.edu/`}</a></p>\n    <h2>{`Main Contributors`}</h2>\n    <p>{`Inwon Kang, Nishant Srivastava, Xinhao Luo, Randolf Xia, Megan Goulet, Ziyi Wang, Joseph Om, Mitesh Kumar, Taras Kaminsky, Norbu Sonam, Shengjin Li`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var text = \"last-modified-date-module--text--ogPQF\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as scss from \"./RepoHeader.module.scss\"\n\nconst RepoHeader = (frontmatter) => {\n  const { url, tags } = frontmatter.frontmatter\n  const items = []\n\n  for (const [index, value] of tags.entries()) {\n    items.push(<Link to={`/repos#${value}`} key={index}><button class=\"bx--tag bx--tag--green\"> <span class=\"bx--tag__label\">{value}</span> </button></Link>)\n  }\n\n  return (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-1\">Repository: </div>\n        <div className=\"bx--col-lg-4\"><a href={url} target=\"_blank\" rel=\"noreferrer\">{url}</a></div>\n      </div>\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-1 category-header\">Categories:</div>\n        <div className=\"bx--col-lg-4\"><div className={scss.flex}>{items}</div></div>\n      </div>\n    </div>\n  )\n}\n\nexport default RepoHeader\n\n\n\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"RepoHeader-module--bx--text-truncate--end--09Tfn\";\nexport var bxTextTruncateFront = \"RepoHeader-module--bx--text-truncate--front--PdfYt\";\nexport var flex = \"RepoHeader-module--flex--anwdv\";\nexport var header = \"RepoHeader-module--header--IXiwg\";\nexport var categoryHeader = \"RepoHeader-module--category-header--bjosG\";","import React from \"react\"\nimport {  StaticQuery, graphql, Link } from \"gatsby\"\nimport * as scss from \"./ReposByTag.module.scss\"\n\nconst renderTagList = (tags) => {\n  const items = []\n\n  for (const t of tags) {\n    items.push(<button class=\"bx--tag bx--tag--green\"> <span class=\"bx--tag__label\">{t}</span> </button>)\n  }\n\n  return items\n}\n\nconst getPage = (d, url) => {\n  const slug = url.replace(\"/repos/\",\"\")\n  const pages = d.allMdx.edges\n\n  const res = pages.filter( p => p.node.slug === slug)\n\n  return res[0].node\n}\n\nconst renderFunction = (d, url) => {\n  const data = getPage(d, url)\n  const fm = data.frontmatter\n  const slug = data.slug\n  const to = `/repos/${slug}`\n\n  const item = (\n    <div>\n      <div className={scss.pb}>\n        <h4>{fm.title}</h4>\n        <p className={scss.italic}>{fm.description}</p>\n      </div>\n      <p className={scss.pt}>{renderTagList(fm.tags)}</p>\n    </div>\n  )\n\n  return <Link to={to} className={scss.tile}>{item}</Link>\n}\n\nconst RepoLink = (url) => (\n  <StaticQuery\n    query={graphql`\n    {\n      allMdx(\n        filter: {fields: {source: {eq: \"repos\"}}, frontmatter: {tags: {}}, slug: {}}\n        sort: {fields: frontmatter___weight, order: ASC}\n      ) {\n        edges {\n          node {\n            id\n            slug\n            frontmatter {\n              description\n              tags\n              url\n              title\n            }\n          }\n        }\n      }\n    }\n    `}\n    render={data => renderFunction(data, url.to)}\n  />\n)\n\n\nexport default RepoLink\n\n\n\n","import React from \"react\"\nimport * as scss from \"./ReposByTag.module.scss\"\n\n\n\nconst RepoLinkList = (li) => {\n    return <div className={scss.flex}>{li.children}</div>\n}\n\n\nexport default RepoLinkList\n\n\n\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { MDXProvider } from \"@mdx-js/react\"\n\nimport Utils from 'gatsby-theme-carbon/src/components/Utils';\nimport Layout from 'gatsby-theme-carbon/src/components/Layout';\nimport PageHeader from 'gatsby-theme-carbon/src/components/PageHeader';\nimport EditLink from 'gatsby-theme-carbon/src/components/EditLink';\nimport NextPrevious from 'gatsby-theme-carbon/src/components/NextPrevious';\nimport PageTabs from 'gatsby-theme-carbon/src/components/PageTabs';\nimport Main from 'gatsby-theme-carbon/src/components/Main';\nimport useMetadata from 'gatsby-theme-carbon/src/util/hooks/useMetadata';\nimport LastModifiedDate from 'gatsby-theme-carbon/src/components/LastModifiedDate';\n\nimport RepoHeader from \"../components/RepoHeader\"\nimport RepoLink from \"../components/RepoLink\";\nimport RepoLinkList from \"../components/RepoLinkList\";\n\nconst RepoLayout = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n  const shortcodes = { RepoLink, RepoLinkList }\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        <RepoHeader frontmatter={frontmatter}></RepoHeader>\n        <MDXProvider components={shortcodes}>{children}</MDXProvider>\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default RepoLayout;\n"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","date","lastModified","Date","className","toLocaleDateString","day","year","month","frontmatter","url","items","tags","entries","index","value","push","Link","to","key","class","href","target","rel","renderFunction","d","data","slug","replace","allMdx","edges","filter","p","node","getPage","fm","item","scss","title","description","t","renderTagList","StaticQuery","query","render","li","children","pageContext","location","Title","relativePagePath","titleType","tabs","frontmatterTheme","theme","keywords","interiorTheme","useMetadata","shortcodes","RepoLink","RepoLinkList","pathPrefix","useStaticQuery","site","pathname","currentTab","split","Boolean","slice","slugify","lower","Layout","homepage","pageTitle","pageDescription","pageKeywords","PageHeader","label","PageTabs","Main","padded","EditLink","LastModifiedDate","NextPrevious","Utils"],"sourceRoot":""}