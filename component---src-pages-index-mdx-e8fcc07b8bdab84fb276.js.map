{"version":3,"file":"component---src-pages-index-mdx-e8fcc07b8bdab84fb276.js","mappings":"6TAQaA,EAAQ,kBAAM,kDAGdC,EAAe,GACtBC,EAAc,CAClBF,MAAAA,EACAC,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAI5E,imBACA,mBACE,cAAIC,WAAW,MAAf,+BACA,cAAIA,WAAW,MAAf,0GACA,cAAIA,WAAW,MAAf,8EAEF,maACA,smBACA,0NAKJJ,EAAWK,gBAAiB,G,2ECpC5B,ECEyB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAOpBC,EAAe,IAAIC,KAAKF,GAE9B,OAAOA,EACL,gBAAC,KAAD,CAAKG,UCVQ,yCDWX,gBAAC,KAAD,KACE,uBAAKA,UCbK,0CDaV,sBACsBF,EAAaG,mBAAmB,QAZ5C,CACdC,IAAK,UACLC,KAAM,UACNC,MAAO,YAcL,O,yJEyEN,IAjFgB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUrB,EAAY,EAAZA,MAClD,EAA0DmB,EAAlDG,YAAAA,OAAR,MAAsB,GAAtB,EAA0BC,EAAgCJ,EAAhCI,iBAAkBC,EAAcL,EAAdK,UAE1CC,EAMEH,EANFG,KACAC,EAKEJ,EALFI,MACOC,EAILL,EAJFM,MACAC,EAGEP,EAHFO,YACAC,EAEER,EAFFQ,SACAnB,EACEW,EADFX,KAGMoB,GAAkBC,EAAAA,EAAAA,KAAlBD,cAIEE,GACNC,EAAAA,EAAAA,gBAAe,cADjBC,KAAQF,WAUJG,EAAOH,EACTZ,EAASgB,SAASC,QAAQL,EAAY,IACtCZ,EAASgB,SAUPE,EAPCd,EAEHW,EAAKI,MAAM,KAAKC,OAAOC,SAASC,OAAO,GAAG,IAC1CC,GAAAA,CAAQnB,EAAK,GAAI,CAAEoB,OAAO,IAHV,GASdjB,EAAQD,GAAoBI,EAElC,OACE,gBAAC,IAAD,CACEN,KAAMA,EACNqB,UAAU,EACVlB,MAAOA,EACPmB,UAAWrB,EACXsB,gBAAiBnB,EACjBoB,aAAcnB,EACdN,UAAWA,GACX,gBAAC,IAAD,CACEE,MAAO1B,EAAQ,gBAACA,EAAD,MAAY0B,EAC3BwB,MAAM,QACNzB,KAAMA,EACNG,MAAOA,IAERH,GACC,gBAAC,IAAD,CACEC,MAAOA,EACPU,KAAMA,EACNX,KAAMA,EACNc,WAAYA,IAGhB,gBAAC,IAAD,CAAMY,QAAM,GACT/B,EACD,gBAAC,IAAD,CAAUG,iBAAkBA,IAC5B,gBAAC,IAAD,CAAkBZ,KAAMA,KAE1B,gBAAC,IAAD,CACEQ,YAAaA,EACbE,SAAUA,EACVe,KAAMA,EACNX,KAAMA,EACNc,WAAYA,IAEd,gBAAC,IAAD","sources":["webpack://neuro-symbolic-ai-toolkit-site/./src/pages/index.mdx","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://neuro-symbolic-ai-toolkit-site/./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM-Research-AI/neuro-symbolic-ai-toolkit-site/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const Title = () => <span>\n    Neuro-Symbolic AI Toolkit\n  </span>;\nexport const _frontmatter = {};\nconst layoutProps = {\n  Title,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`The Neuro-Symbolic AI initiative at IBM aims to conceive a fundamental new methodology for AI, to address the gaps remaining between todayâ€™s state-of-the-art and the full goals of AI, including AGI. In particular it is aimed at augmenting (and retaining) the strengths of statistical AI (machine learning) with the complementary capabilities of symbolic AI (knowledge and reasoning). It is aimed at a construction of new paradigms rather than superficial synthesis of existing paradigms, and revolution rather than evolution. The primary goals of NS are to demonstrate the capability to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Solve much harder problems`}</li>\n      <li parentName=\"ol\">{`Learn with dramatically less data, ultimately for a large number of tasks rather than one narrow task`}</li>\n      <li parentName=\"ol\">{`Provide inherently understandable and controllable decisions and actions`}</li>\n    </ol>\n    <p>{`NS research directly addresses long-standing obstacles including imperfect or incomplete knowledge, the difficulty of semantic parsing, and computational scaling. NS is oriented toward long-term science via a focused and sequentially constructive research program, with open and collaborative publishing, and periodic spinoff technologies, with a small selection of motivating use cases over time.`}</p>\n    <p>{`The primary ones currently include the pursuit of true natural language understanding via the proxy of question answering; automatic data science, programming, and mathematics; and financial trading/risk optimization as ways to showcase the fundamental principles being developed. Research in NS is inherently multi-disciplinary and includes (among many other things) work in learning theory and foundations, optimization and algorithms, knowledge representation and acquisition, logic and theorem proving, reinforcement learning, planning, and control, and multi-task/meta/transfer learning.`}</p>\n    <p>{`Neuro-symbolic AI toolkit provide links to all the efforts related to neuro-symbolic AI at IBM Research. Some repositories are grouped together according the meta-projects or pipelines they serve.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var text = \"last-modified-date-module--text--ogPQF\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"names":["Title","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","date","lastModified","Date","className","toLocaleDateString","day","year","month","pageContext","children","location","frontmatter","relativePagePath","titleType","tabs","title","frontmatterTheme","theme","description","keywords","interiorTheme","useMetadata","pathPrefix","useStaticQuery","site","slug","pathname","replace","currentTab","split","filter","Boolean","slice","slugify","lower","homepage","pageTitle","pageDescription","pageKeywords","label","padded"],"sourceRoot":""}